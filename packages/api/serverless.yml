service: trace-stack

plugins:
  - serverless-esbuild
  - serverless-offline
  # - serverless-domain-manager

params:
  default:
    DATA_RETENTION_DAYS: ${env:DATA_RETENTION_DAYS, 30}
    CUSTOM_DOMAIN: ${env:CUSTOM_DOMAIN, ""}

custom:
  # baseDomain: my-app.com
  # domain:
  #   production: api.${self:custom.baseDomain}
  #   default: api-${sls:stage}.${self:custom.baseDomain}
  # customDomain:
  #   domainName: ${self:custom.domain.${sls:stage}, self:custom.domain.default}
  #   stage: ${sls:stage}
  #   certificateName: ${self:custom.baseDomain}
  #   createRoute53Record: true
  #   endpointType: regional
  #   apiType: http
  #   autoDomain: true

package:
  individually: true
  include:
    - dist/**

provider:
  name: aws
  runtime: nodejs20.x
  timeout: 25
  region: eu-west-1
  deploymentMethod: direct
  versionFunctions: false
  stage: ${opt:stage, 'production'}
  stackTags:
    service: ${self:service}
  environment:
    SERVICE: ${self:service}
    STAGE: ${sls:stage}
    DATA_RETENTION_DAYS: ${param:DATA_RETENTION_DAYS}
    API_GATEWAY_NAME: ${sls:stage}-${self:service}
    NODE_ENV: ${sls:stage}
    TABLE_NAME: ${self:service}-${sls:stage}
    CUSTOM_DOMAIN: ${param:CUSTOM_DOMAIN}
    LAMBDA_LAYER_ARN: !Ref TracerLambdaLayer
    AUTO_TRACE_EXCLUDE: 1
  httpApi:
    payload: "2.0"
    cors: true
    # authorizers:
    #   WebAuthorizer:
    #     identitySource: $request.header.Authorization
    #     issuerUrl:
    #       Fn::Join:
    #         - ""
    #         - - "https://cognito-idp."
    #           - "${opt:region, self:provider.region}"
    #           - ".amazonaws.com/"
    #           - Ref: CognitoUserPool
    #     audience:
    #       Ref: CognitoUserPoolClient
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-${sls:stage}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-${sls:stage}/index/*
        - Effect: Allow
          Action:
            - lambda:ListFunctions
            - lambda:UpdateFunctionConfiguration
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - apigateway:GetRestApis
          Resource:
            - "*"

layers:
  tracer:
    path: ../lambda-layer/artifact
    name: ${self:service}-layer
    description: Auto-tracing layer for your functions
    compatibleRuntimes:
      - nodejs16.x
      - nodejs18.x
      - nodejs20.x

functions:
  main:
    handler: src/index.handler
    timeout: 900
    memorySize: 2048
    events:
      - httpApi:
          path: /{proxy+}
          method: any
      - schedule:
          rate: rate(1 day)
          input:
            action: auto-trace

resources:
  - ${file(./src/infrastructure/database/table.yml)}
